{"version":3,"file":"Typography.stories.475a4dc3.js","sources":["../../node_modules/clsx/dist/clsx.m.js","../../src/components/Typography/Typography.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { HTMLAttributes } from 'react';\nimport { clsx } from 'clsx';\n\ninterface sizesProps {\n  type: string;\n  size: number;\n}\nexport interface TypographyProps extends HTMLAttributes<HTMLSpanElement> {\n  fontFamily: 'Baloo 2' | 'Roboto';\n  sizes: sizesProps[];\n}\n\ninterface TypographyItemProps extends HTMLAttributes<HTMLSpanElement> {\n  value: string;\n  fontSize: number;\n}\n\nfunction TypographyItem({ value, fontSize, ...rest }: TypographyItemProps) {\n  return (\n    <div className=\"flex gap-8 items-center text-base-subtitle\">\n      <span className=\"w-10 text-xs text-base-label\">{value}</span>\n      <span className=\"w-10 text-xs text-base-label\">{fontSize}</span>\n      <span {...rest}>Invest Regularly in Your Knowledge Portfolio...</span>\n    </div>\n  );\n}\n\nfunction Typography({\n  fontFamily = 'Roboto',\n  sizes,\n  ...rest\n}: TypographyProps) {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <span className=\"text-xs text-white pl-8\">\n        Font Family:{' '}\n        <span className=\"text-base-label\">\n          &quot;{fontFamily}, sans-serif&quot;\n        </span>\n      </span>\n      <span className=\"text-xs text-white pl-8\">\n        Font Weight: <span className=\"text-base-label\">&quot;normal&quot;</span>\n      </span>\n      <div className=\"flex justify-center mt-6\">\n        <div className=\"flex flex-col p-6 gap-2 bg-white rounded w-fit\">\n          {sizes.map(({ type, size }) => (\n            <TypographyItem\n              key={type}\n              value={type}\n              fontSize={size}\n              className={clsx(\n                'font-normal',\n                {\n                  'font-baloo': fontFamily === 'Baloo 2',\n                  'font-roboto': fontFamily === 'Roboto',\n                },\n                {\n                  'text-xs': type === 'xs',\n                  'text-sm': type === 'sm',\n                  'text-md': type === 'md',\n                  'text-lg': type === 'lg',\n                  'text-xl': type === 'xl',\n                  'text-xxl': type === 'xxl',\n                },\n              )}\n              {...rest}\n            />\n          ))}\n        </div>\n      </div>\n      <span className=\"text-xs text-white pl-8 mt-10\">\n        Font Weight: <span className=\"text-base-label\">&quot;bold&quot;</span>\n      </span>\n      <div className=\"flex justify-center mt-6\">\n        <div className=\"flex flex-col p-6 gap-2 bg-white rounded w-fit\">\n          {sizes.map(({ type, size }) => (\n            <TypographyItem\n              key={type}\n              value={type}\n              fontSize={size}\n              className={clsx(\n                'font-bold',\n                {\n                  'font-baloo': fontFamily === 'Baloo 2',\n                  'font-roboto': fontFamily === 'Roboto',\n                },\n                {\n                  'text-xs': type === 'xs',\n                  'text-sm': type === 'sm',\n                  'text-md': type === 'md',\n                  'text-lg': type === 'lg',\n                  'text-xl': type === 'xl',\n                  'text-xxl': type === 'xxl',\n                },\n              )}\n              {...rest}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Typography };\n"],"names":["r","e","f","n","__name","clsx","TypographyItem","value","fontSize","_jsxs","_jsx","rest","Typography","fontFamily","sizes","type","size"],"mappings":"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"}